{"version":3,"file":"component---src-pages-index-tsx-8cd7b0e0e3278cc22629.js","mappings":"uMAIMA,EAAS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAEhB,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACfD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,cACdD,EAAAA,cAAAA,QAAAA,KAAAA,aACCD,M,0FCMT,EAfa,SAACG,GAIZ,OACEF,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAAA,IAAAA,CAAGG,KAAM,QAAUD,EAAME,IACvBJ,EAAAA,cAAAA,KAAAA,KAAKE,EAAMG,WC0DrB,EAzCkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACEN,EAAAA,cAACF,EAAAA,EAAD,KAEIQ,EAAKC,eAAeC,MAAMC,KAAI,SAAEC,GAAF,OAC5BV,EAAAA,cAACW,EAAD,CACEP,GAAIM,EAAKE,qBACTC,IAAKH,EAAKE,qBACVP,MAAOK,EAAKL,WANpB,IAWIC,EAAKQ,gBAAgBN,MAAMC,KAAI,SAAEM,GAAF,OAC7Bf,EAAAA,cAACW,EAAD,CACEP,GAAIW,EAAMH,qBACVC,IAAKE,EAAMH,qBACXP,MAAOU,EAAMV","sources":["webpack://gatsby-starter-typescript-deluxe/./src/components/layout/layout.tsx","webpack://gatsby-starter-typescript-deluxe/./src/templates/Card.tsx","webpack://gatsby-starter-typescript-deluxe/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\"\nimport \"../../styles/main.css\"\nimport Header from \"./header\"\n\nconst Layout = ({ children } :any) => {\n\n  return (\n    <>\n      <div className=\"bar topbar\"></div>\n      <main className=\"pageStyles\">\n        <title>Home Page</title>   \n        {children}\n      </main>\n    </>\n  )\n}\n\nexport { Layout };\n","import * as React from 'react'\n\nconst Card = (props: {\n  id: string;\n  title: string;\n}) => {\n  return (\n    <div>\n      <div className='card-text'>\n        <a href={'node/' + props.id}>\n          <h2>{props.title}</h2>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout } from '../components/layout'\nimport Card from '../templates/Card'\n\nexport interface indexProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean;\n  /**\n   * What background color to use\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n}\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      {\n        data.allNodeArticle.nodes.map(( node ) => (\n          <Card\n            id={node.drupal_internal__nid}\n            key={node.drupal_internal__nid}\n            title={node.title}\n          />\n        ))\n      },\n      {\n        data.allNodeAdvanced.nodes.map(( node2 ) => (\n          <Card\n            id={node2.drupal_internal__nid}\n            key={node2.drupal_internal__nid}\n            title={node2.title}\n          />\n        ))\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allNodeArticle(sort: {fields: [created], order: DESC}) {\n      nodes {\n        drupal_internal__nid\n        title\n      }\n    }\n    allNodeAdvanced(sort: {fields: [created], order: DESC}) {\n      nodes {\n        drupal_internal__nid\n        title\n      }\n    }\n  }\n`\nexport default IndexPage\n"],"names":["Layout","children","React","className","props","href","id","title","data","allNodeArticle","nodes","map","node","Card","drupal_internal__nid","key","allNodeAdvanced","node2"],"sourceRoot":""}