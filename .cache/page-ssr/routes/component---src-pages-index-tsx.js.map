{"version":3,"file":"component---src-pages-index-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAGA,MAAMC,MAAM,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAuB;EAEpC,oBACEF,0DAAAA,CAAAA,uDAAAA,qBACEA,0DAAAA;IAAKG,SAAS,EAAC;EAAf,EADF,eAEEH,0DAAAA;IAAMG,SAAS,EAAC;EAAhB,gBACEH,0DAAAA,4BADF,EAGGE,QAHH,CAFF,CADF;AAFF;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;;AAwBA,MAAMI,SAAS,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAC9B,oBACEP,gDAAAA,CAACC,sDAAD,QAEIM,IAAI,CAACC,cAALD,CAAoBE,KAApBF,CAA0BG,GAA1BH,CAAgCI,IAAF,iBAC5BX,gDAAAA,CAACI,uDAAD;IACEQ,EAAE,EAAED,IAAI,CAACE,oBADX;IAEEC,GAAG,EAAEH,IAAI,CAACE,oBAFZ;IAGEE,KAAK,EAAEJ,IAAI,CAACI,KAHd;IAIEC,IAAI,EAAEL,IAAI,CAACK,IAALL,CAAUM;EAJlB,EADFV,CAFJ,OAYIA,IAAI,CAACW,WAALX,CAAiBE,KAAjBF,CAAuBG,GAAvBH,CAA6BY,KAAF,iBACzBnB,gDAAAA,CAACI,uDAAD;IACEQ,EAAE,EAAEO,KAAK,CAACN,oBADZ;IAEEC,GAAG,EAAEK,KAAK,CAACN,oBAFb;IAGEE,KAAK,EAAEI,KAAK,CAACJ,KAHf;IAIEC,IAAI,EAAEG,KAAK,CAACH,IAANG,CAAWF;EAJnB,EADFV,CAZJ,OAsBIA,IAAI,CAACa,eAALb,CAAqBE,KAArBF,CAA2BG,GAA3BH,CAAiCc,KAAF,iBAC7BrB,gDAAAA,CAACK,0DAAD;IACEO,EAAE,EAAES,KAAK,CAACR,oBADZ;IAEEC,GAAG,EAAEO,KAAK,CAACR,oBAFb;IAGEE,KAAK,EAAEM,KAAK,CAACN;EAHf,EADFR,CAtBJ,CADF;AADF;;AAoCO,MAAMe,KAAK,YAAX;AA8BP,iEAAehB,SAAf;;;;;;;;;;;;;;;;;AC9FA;;AAEA,MAAMF,IAAI,GAAImB,KAAD,IAIP;EACJ,oBACEvB,gDAAAA,2BACEA,gDAAAA;IAAKG,SAAS,EAAC;EAAf,gBACEH,gDAAAA;IAAGwB,IAAI,EAAE,UAAUD,KAAK,CAACX;EAAzB,gBACEZ,gDAAAA,aAAKuB,KAAK,CAACR,KAAX,CADF,CADF,eAIEf,gDAAAA;IAAKyB,uBAAuB,EAAE;MAACC,MAAM,EAAEH,KAAK,CAACP;IAAf;EAA9B,EAJF,CADF,CADF;AALF;;AAiBA,iEAAeZ,IAAf;;;;;;;;;;;;;;;;;ACnBA;;AAEA,MAAMC,OAAO,GAAIkB,KAAD,IAGV;EACJ,oBACEvB,gDAAAA,2BACEA,gDAAAA;IAAKG,SAAS,EAAC;EAAf,gBACEH,gDAAAA;IAAGwB,IAAI,EAAE,UAAUD,KAAK,CAACX;EAAzB,gBACEZ,gDAAAA,aAAKuB,KAAK,CAACR,KAAX,CADF,CADF,CADF,CADF;AAJF;;AAeA,iEAAeV,OAAf","sources":["webpack://gatsby-starter-typescript-deluxe/./src/components/layout/layout.tsx","webpack://gatsby-starter-typescript-deluxe/./src/pages/index.tsx","webpack://gatsby-starter-typescript-deluxe/./src/templates/Card.tsx","webpack://gatsby-starter-typescript-deluxe/./src/templates/Product.tsx"],"sourcesContent":["import React from \"react\"\nimport \"../../styles/main.css\"\nimport Header from \"./header\"\n\nconst Layout = ({ children } :any) => {\n\n  return (\n    <>\n      <div className=\"bar topbar\"></div>\n      <main className=\"pageStyles\">\n        <title>Home Page</title>\n        \n        {children}\n      </main>\n    </>\n  )\n}\n\nexport { Layout };\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout } from '../components/layout'\nimport Card from '../templates/Card'\nimport Product from '../templates/Product'\n\nexport interface indexProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean;\n  /**\n   * What background color to use\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n}\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      {\n        data.allNodeArticle.nodes.map(( node ) => (\n          <Card\n            id={node.drupal_internal__nid}\n            key={node.drupal_internal__nid}\n            title={node.title}\n            body={node.body.summary}\n          />\n        ))\n      },\n      {\n        data.allNodePage.nodes.map(( node2 ) => (\n          <Card\n            id={node2.drupal_internal__nid}\n            key={node2.drupal_internal__nid}\n            title={node2.title}\n            body={node2.body.summary}\n          />\n        ))\n      },\n      {\n        data.allNodeProducts.nodes.map(( node3 ) => (\n          <Product\n            id={node3.drupal_internal__nid}\n            key={node3.drupal_internal__nid}\n            title={node3.title}\n          />\n        ))\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allNodeArticle(sort: {fields: [created], order: DESC}) {\n      nodes {\n        drupal_internal__nid\n        title\n        body {\n          value\n          summary\n        }\n      }\n    }\n    allNodePage(sort: {fields: [created], order: DESC}) {\n      nodes {\n        drupal_internal__nid\n        title\n        body {\n          value\n          summary\n        }\n      }\n    }\n    allNodeProducts(sort: {fields: [created], order: DESC}) {\n      nodes {\n        drupal_internal__nid\n        title\n      }\n    }\n  }\n`\nexport default IndexPage\n","import * as React from 'react'\n\nconst Card = (props: {\n  id: string;\n  title: string;\n  body: string\n}) => {\n  return (\n    <div>\n      <div className='card-text'>\n        <a href={'node/' + props.id}>\n          <h2>{props.title}</h2>\n        </a>\n        <div dangerouslySetInnerHTML={{__html: props.body}} />\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import * as React from 'react'\n\nconst Product = (props: {\n  id: string;\n  title: string;\n}) => {\n  return (\n    <div>\n      <div className='product-text'>\n        <a href={'node/' + props.id}>\n          <h2>{props.title}</h2>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Product\n"],"names":["React","Layout","children","className","Card","Product","IndexPage","data","allNodeArticle","nodes","map","node","id","drupal_internal__nid","key","title","body","summary","allNodePage","node2","allNodeProducts","node3","query","props","href","dangerouslySetInnerHTML","__html"],"sourceRoot":""}